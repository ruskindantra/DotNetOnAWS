{
  "Resources": {
    "localweathercluster2739CF22": {
      "Type": "AWS::ECS::Cluster",
      "Properties": {
        "ClusterName": "localweathercluster"
      },
      "Metadata": {
        "aws:cdk:path": "LocalWeatherApiCdkStack1/localweathercluster/Resource"
      }
    },
    "localweathersvcLB38F7B5CF": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Name": "localweatherelb",
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "localweathersvcLBSecurityGroup5D3D3BDD",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          "subnet-46238c0e",
          "subnet-0402bd62",
          "subnet-2994fe70"
        ],
        "Type": "application"
      },
      "Metadata": {
        "aws:cdk:path": "LocalWeatherApiCdkStack1/localweathersvc/LB/Resource"
      }
    },
    "localweathersvcLBSecurityGroup5D3D3BDD": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB LocalWeatherApiCdkStack1localweathersvcLB006A5F40",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": "vpc-4be42e2d"
      },
      "Metadata": {
        "aws:cdk:path": "LocalWeatherApiCdkStack1/localweathersvc/LB/SecurityGroup/Resource"
      }
    },
    "localweathersvcLBSecurityGrouptoLocalWeatherApiCdkStack1localweathersvcServiceSecurityGroup9079D29580D975DC8E": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "localweathersvcLBSecurityGroup5D3D3BDD",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "localweathersvcServiceSecurityGroup42813B4D",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "LocalWeatherApiCdkStack1/localweathersvc/LB/SecurityGroup/to LocalWeatherApiCdkStack1localweathersvcServiceSecurityGroup9079D295:80"
      }
    },
    "localweathersvcLBPublicListener60581645": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "localweathersvcLBPublicListenerECSGroup8D060C57"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "localweathersvcLB38F7B5CF"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "LocalWeatherApiCdkStack1/localweathersvc/LB/PublicListener/Resource"
      }
    },
    "localweathersvcLBPublicListenerECSGroup8D060C57": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckPath": "/localweather",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "VpcId": "vpc-4be42e2d"
      },
      "Metadata": {
        "aws:cdk:path": "LocalWeatherApiCdkStack1/localweathersvc/LB/PublicListener/ECSGroup/Resource"
      }
    },
    "localweathersvcTaskDefTaskRoleAC928596": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalWeatherApiCdkStack1/localweathersvc/TaskDef/TaskRole/Resource"
      }
    },
    "localweathersvcTaskDefAB4E9E79": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": {
              "Fn::Join": [
                "",
                [
                  "574931369507.dkr.ecr.ap-southeast-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/localweather:latest"
                ]
              ]
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "localweathersvcTaskDefwebLogGroup3FBE615D"
                },
                "awslogs-stream-prefix": "localweathersvc",
                "awslogs-region": "ap-southeast-1"
              }
            },
            "Name": "web",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "localweathersvcTaskDefExecutionRole0A40A6BC",
            "Arn"
          ]
        },
        "Family": "LocalWeatherApiCdkStack1localweathersvcTaskDef6F184079",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "localweathersvcTaskDefTaskRoleAC928596",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalWeatherApiCdkStack1/localweathersvc/TaskDef/Resource"
      }
    },
    "localweathersvcTaskDefwebLogGroup3FBE615D": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "LocalWeatherApiCdkStack1/localweathersvc/TaskDef/web/LogGroup/Resource"
      }
    },
    "localweathersvcTaskDefExecutionRole0A40A6BC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalWeatherApiCdkStack1/localweathersvc/TaskDef/ExecutionRole/Resource"
      }
    },
    "localweathersvcTaskDefExecutionRoleDefaultPolicy44B6163A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ecr:ap-southeast-1:574931369507:repository/localweather"
                  ]
                ]
              }
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "localweathersvcTaskDefwebLogGroup3FBE615D",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "localweathersvcTaskDefExecutionRoleDefaultPolicy44B6163A",
        "Roles": [
          {
            "Ref": "localweathersvcTaskDefExecutionRole0A40A6BC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalWeatherApiCdkStack1/localweathersvc/TaskDef/ExecutionRole/DefaultPolicy/Resource"
      }
    },
    "localweathersvcService2E1B2B72": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "localweathercluster2739CF22"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 3,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "web",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "localweathersvcLBPublicListenerECSGroup8D060C57"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "localweathersvcServiceSecurityGroup42813B4D",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              "subnet-46238c0e",
              "subnet-0402bd62",
              "subnet-2994fe70"
            ]
          }
        },
        "ServiceName": "localweathersvc",
        "TaskDefinition": {
          "Ref": "localweathersvcTaskDefAB4E9E79"
        }
      },
      "DependsOn": [
        "localweathersvcLBPublicListenerECSGroup8D060C57",
        "localweathersvcLBPublicListener60581645"
      ],
      "Metadata": {
        "aws:cdk:path": "LocalWeatherApiCdkStack1/localweathersvc/Service/Service"
      }
    },
    "localweathersvcServiceSecurityGroup42813B4D": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "LocalWeatherApiCdkStack1/localweathersvc/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": "vpc-4be42e2d"
      },
      "Metadata": {
        "aws:cdk:path": "LocalWeatherApiCdkStack1/localweathersvc/Service/SecurityGroup/Resource"
      }
    },
    "localweathersvcServiceSecurityGroupfromLocalWeatherApiCdkStack1localweathersvcLBSecurityGroupA3C5B2B180DC38A83F": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "localweathersvcServiceSecurityGroup42813B4D",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "localweathersvcLBSecurityGroup5D3D3BDD",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "LocalWeatherApiCdkStack1/localweathersvc/Service/SecurityGroup/from LocalWeatherApiCdkStack1localweathersvcLBSecurityGroupA3C5B2B1:80"
      }
    },
    "dotnetonawslocalweatherapiurl23927539": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Fn::Join": [
            "",
            [
              "http://",
              {
                "Fn::GetAtt": [
                  "localweathersvcLB38F7B5CF",
                  "DNSName"
                ]
              },
              "/"
            ]
          ]
        },
        "Description": "URL for the LocalWeather API. Used by the OldWebApp MVC project to be hosted on BeanStalk",
        "Name": "/dotnetonaws/localweatherapi/url"
      },
      "Metadata": {
        "aws:cdk:path": "LocalWeatherApiCdkStack1/--dotnetonaws--localweatherapi--url/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAACn1STU/DMAz9Lbun6QpCnJBg3UBI05i6iXvIvCqsTarYGZqq/HeSfkxjIJSD7ef39OwkGc+yOz6dPIovTOTukLbSWODthoQ8sALQOCuB5Xv95qhxxHKjkayTFLGx71mUtyAtL6AxqMjY00wgMJDI27xySGCjYkyfhS0FwVbgYQ57pRUpoyPhGjGahNJgL7BBuwF7VP1sQ+qjXdIICg4a+VPTVEqKqFkasZuJSmgJuys5VAJJySowPjqG0uXxhrd/q7slftSXPBV20wNnzC/62+AM9GKNa/pVz2WcPHhuQDqr6HSm/A8sSguIv+BX3eGeKVHztjBVd0ddXJswyymWfeZZZcrwQktTni3G3DPEOv4EG25kLayoYXjEc+G9Z3NDK6D0lmc8u0/5arHNww8KWyfvYDFs/XAMvTTj03gmn6hUYp0mVQMv+vgN99gYzIUCAAA="
      },
      "Metadata": {
        "aws:cdk:path": "LocalWeatherApiCdkStack1/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "localweathersvcLoadBalancerDNSDE2E62AF": {
      "Value": {
        "Fn::GetAtt": [
          "localweathersvcLB38F7B5CF",
          "DNSName"
        ]
      }
    },
    "localweathersvcServiceURL1FA51A92": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "localweathersvcLB38F7B5CF",
                "DNSName"
              ]
            }
          ]
        ]
      }
    }
  }
}